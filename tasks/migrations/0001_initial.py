# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-24 17:24
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('mod_date', models.DateTimeField(auto_now=True)),
                ('last_edited_by', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.CharField(max_length=80)),
                ('description', models.TextField(blank=True, null=True)),
                ('registered', models.DateTimeField(editable=False)),
                ('recurring', models.BooleanField(default=False, verbose_name='Is the task recurring?')),
                ('typeof_recurrence', models.IntegerField(blank=True, choices=[(1, 'Yearly'), (2, 'Monthly'), (3, 'Weekly'), (4, 'Daily')], null=True)),
                ('dateof_recurrence', models.DateField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(1, 'In progress'), (2, 'Overdue'), (3, 'On hold'), (4, 'Done'), (5, 'To-Do')], default=5)),
                ('complete_date', models.DateTimeField(blank=True, null=True)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('prerequisite_description', models.TextField(blank=True, null=True)),
                ('last_edited', models.DateTimeField()),
                ('last_edited_by', models.CharField(max_length=50, null=True)),
                ('commentary', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('complete_date', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.Task')),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tasks.UserProfile'),
        ),
        migrations.AddField(
            model_name='task',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='task',
            name='prerequisite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tasks.Task'),
        ),
        migrations.AddField(
            model_name='task',
            name='priority',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.Priority'),
        ),
    ]
